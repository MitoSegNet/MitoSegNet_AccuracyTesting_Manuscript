"""

Analyse tables generated by soc_fod_generate_results.py

Statistical analysis

Create box plot

"""

import numpy as np
import pandas as pd
import os
import matplotlib.pyplot as plt
import seaborn as sb
from scipy.stats import normaltest, mannwhitneyu, ttest_ind, f_oneway, levene
from scikit_posthocs import posthoc_tukey
from Plot_Significance import significance_bar
from effect_size import cohens_d

import warnings
warnings.simplefilter("ignore", UserWarning)
warnings.simplefilter("ignore", FutureWarning)

pd.set_option('display.max_columns', 10)
pd.set_option('display.width', 1000)

path = "C:/Users/Christian/Desktop/Fourth_CV/Complete_images/False_Object_Detection"

file_list = ['MitoSegNet_error_counting_data.csv', 'Finetuned Fiji U-Net_error_counting_data.csv', 'Ilastik_error_counting_data.csv',
             'Gaussian_error_counting_data.csv', 'Hessian_error_counting_data.csv', 'Laplacian_error_counting_data.csv']

seg_list = ["MitoSegNet", "Finetuned\nFiji U-Net", "Ilastik", "Gaussian", "Hessian", "Laplacian"]

all_data = pd.DataFrame(columns=seg_list)

for file, method in zip(file_list, all_data):

    if ".csv" in file:

        #print(file)

        table = pd.read_csv(path + "/" + file)

        # removing first column
        table.drop(table.columns[[0, 1]], axis=1, inplace=True)

        l = []
        for merge, split, add in zip(table["falsely merged"], table["falsely split"], table["falsely added"]):
        #for missing in table["missing"]:
            #print(merge,split,add)

            l.append(merge+split+add)
            #l.append(missing)

        all_data[method] = l


# check for normality
for seg in seg_list:
    print(normaltest(all_data[seg]))

# check for equal variance
print(levene(all_data["Gaussian"].tolist(), all_data["Hessian"].tolist(), all_data["Laplacian"].tolist(),
              all_data["Ilastik"].tolist(), all_data["MitoSegNet"].tolist(), all_data["Finetuned\nFiji U-Net"].tolist()))


print(f_oneway(all_data["Gaussian"].tolist(), all_data["Hessian"].tolist(), all_data["Laplacian"].tolist(),
              all_data["Ilastik"].tolist(), all_data["MitoSegNet"].tolist(), all_data["Finetuned\nFiji U-Net"].tolist()))

x = all_data
x = x.melt(var_name='groups', value_name='values')

pht = posthoc_tukey(x, val_col='values', group_col='groups')
print(pht)
#pht.to_excel("fod_posthoc.xlsx")


"""
for seg in seg_list:
    if seg != "MitoSegNet":
        print(seg, cohens_d(all_data[seg], all_data["MitoSegNet"]))
"""


#n = sb.violinplot(data=all_data, color="white", inner=None)#.set(ylabel="Percent of wrongly\nsegmented objects")
n = sb.swarmplot(data=all_data, color="black")
sb.boxplot(data=all_data, color="white", fliersize=0)


n.set_ylabel("Missing objects", fontsize=32)

#n.set_ylabel("Percent of missing objects", fontsize=18)

#n.tick_params(labelsize=14)

n.tick_params(axis="x", labelsize=34, rotation=45)
n.tick_params(axis="y", labelsize=28)

#significance_bar(pos_y=1.3, pos_x=[0, 5], bar_y=0.03, p=2, y_dist=0.05, distance=0.1)
#significance_bar(pos_y=1.2, pos_x=[0, 3], bar_y=0.03, p=2, y_dist=0.05, distance=0.1)


plt.show()